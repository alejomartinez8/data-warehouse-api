// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["orderByRelation"]
}

enum Role {
  BASIC
  ADMIN
}

model User {
  id        String @id @default(uuid())
  email     String @unique
  firstName String
  lastName  String
  role      Role   @default(BASIC)
  password  String
}

model City {
  id        String    @id @default(uuid())
  name      String    @unique
  country   Country   @relation(fields: [countryId], references: [id])
  countryId String
  companies Company[]
  contacts  Contact[]
}

model Country {
  id       String @id @default(uuid())
  name     String @unique
  region   Region @relation(fields: [regionId], references: [id])
  regionId String
  cities   City[]
}

model Region {
  id        String    @id @default(uuid())
  name      String    @unique
  countries Country[]
}

model Company {
  id      String    @id @default(uuid())
  name    String    @unique
  address String?
  email   String?
  phone   String?
  city    City?     @relation(fields: [cityId], references: [id])
  cityId  String?
  Contact Contact[]
}

model Contact {
  id        String               @id @default(uuid())
  firstName String
  lastName  String
  email     String               @unique
  position  String
  interest  String?
  company   Company?             @relation(fields: [companyId], references: [id])
  companyId String?
  city      City?                @relation(fields: [cityId], references: [id])
  cityId    String?
  channels  ChannelsOnContacts[]
}

model Channel {
  id                 String               @id @default(uuid())
  name               String
  ChannelsOnContacts ChannelsOnContacts[]
}

enum PreferedChanel {
  NO_PREFERENCE
  FAVORITE
  DONT_DISTURB
}

model ChannelsOnContacts {
  id         String          @id @default(uuid())
  contact    Contact         @relation(fields: [contactId], references: [id])
  contactId  String
  channel    Channel         @relation(fields: [channelId], references: [id])
  channelId  String
  account    String?
  phone      String?
  preference PreferedChanel? @default(NO_PREFERENCE)
}
